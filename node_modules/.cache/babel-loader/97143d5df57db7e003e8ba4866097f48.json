{"ast":null,"code":"import _slicedToArray from \"/Users/pilatus/Desktop/song-list/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/pilatus/Desktop/song-list/src/contexts/SongContext.js\";\nimport React, { createContext, useState } from 'react';\nimport uuid from 'uuid/v4';\nexport const SongContext = createContext();\n\nconst SongContextProvider = props => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        title = _useState2[0],\n        setTitle = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        singer = _useState4[0],\n        setSinger = _useState4[1];\n\n  const _useState5 = useState([{\n    title: 'under pressure',\n    singer: 'Queen',\n    id: uuid()\n  }, {\n    title: 'castles in the air',\n    singer: 'don mclean',\n    id: uuid()\n  }, {\n    title: 'bad',\n    singer: 'michael jackson',\n    id: uuid()\n  }, {\n    title: 'aquarela',\n    singer: 'toquinho',\n    id: uuid()\n  }]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        songs = _useState6[0],\n        setSongs = _useState6[1];\n\n  const addSong = (title, singer) => {\n    setSongs([...songs, {\n      title,\n      singer,\n      id: uuid()\n    }]); // setSongs([...books, { title: title, singer: singer, id: uuid() }]);\n  };\n\n  const removeSong = id => {\n    setSongs(songs.filter(song => song.id !== id));\n  };\n\n  const removeAll = () => {\n    setTitle('');\n    setSinger('');\n  };\n\n  return React.createElement(SongContext.Provider, {\n    value: {\n      songs,\n      addSong,\n      removeSong\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default SongContextProvider;","map":{"version":3,"sources":["/Users/pilatus/Desktop/song-list/src/contexts/SongContext.js"],"names":["React","createContext","useState","uuid","SongContext","SongContextProvider","props","title","setTitle","singer","setSinger","id","songs","setSongs","addSong","removeSong","filter","song","removeAll","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,OAAOC,IAAP,MAAiB,SAAjB;AAEA,OAAO,MAAMC,WAAW,GAAGH,aAAa,EAAjC;;AAEP,MAAMI,mBAAmB,GAAGC,KAAK,IAAI;AAAA,oBACTJ,QAAQ,CAAC,EAAD,CADC;AAAA;AAAA,QAC5BK,KAD4B;AAAA,QACrBC,QADqB;;AAAA,qBAEPN,QAAQ,CAAC,EAAD,CAFD;AAAA;AAAA,QAE5BO,MAF4B;AAAA,QAEpBC,SAFoB;;AAAA,qBAITR,QAAQ,CAAC,CACjC;AAAEK,IAAAA,KAAK,EAAE,gBAAT;AAA2BE,IAAAA,MAAM,EAAE,OAAnC;AAA4CE,IAAAA,EAAE,EAAER,IAAI;AAApD,GADiC,EAEjC;AACEI,IAAAA,KAAK,EAAE,oBADT;AAEEE,IAAAA,MAAM,EAAE,YAFV;AAGEE,IAAAA,EAAE,EAAER,IAAI;AAHV,GAFiC,EAOjC;AAAEI,IAAAA,KAAK,EAAE,KAAT;AAAgBE,IAAAA,MAAM,EAAE,iBAAxB;AAA2CE,IAAAA,EAAE,EAAER,IAAI;AAAnD,GAPiC,EAQjC;AAAEI,IAAAA,KAAK,EAAE,UAAT;AAAqBE,IAAAA,MAAM,EAAE,UAA7B;AAAyCE,IAAAA,EAAE,EAAER,IAAI;AAAjD,GARiC,CAAD,CAJC;AAAA;AAAA,QAI5BS,KAJ4B;AAAA,QAIrBC,QAJqB;;AAenC,QAAMC,OAAO,GAAG,CAACP,KAAD,EAAQE,MAAR,KAAmB;AACjCI,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAW;AAAEL,MAAAA,KAAF;AAASE,MAAAA,MAAT;AAAiBE,MAAAA,EAAE,EAAER,IAAI;AAAzB,KAAX,CAAD,CAAR,CADiC,CAEjC;AACD,GAHD;;AAKA,QAAMY,UAAU,GAAGJ,EAAE,IAAI;AACvBE,IAAAA,QAAQ,CAACD,KAAK,CAACI,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACN,EAAL,KAAYA,EAAjC,CAAD,CAAR;AACD,GAFD;;AAIA,QAAMO,SAAS,GAAG,MAAM;AACtBV,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,SAAS,CAAC,EAAD,CAAT;AACD,GAHD;;AAKA,SACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEE,MAAAA,KAAF;AAASE,MAAAA,OAAT;AAAkBC,MAAAA;AAAlB,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,KAAK,CAACa,QADT,CADF;AAKD,CAlCD;;AAoCA,eAAed,mBAAf","sourcesContent":["import React, { createContext, useState } from 'react';\nimport uuid from 'uuid/v4';\n\nexport const SongContext = createContext();\n\nconst SongContextProvider = props => {\n  const [title, setTitle] = useState('');\n  const [singer, setSinger] = useState('');\n\n  const [songs, setSongs] = useState([\n    { title: 'under pressure', singer: 'Queen', id: uuid() },\n    {\n      title: 'castles in the air',\n      singer: 'don mclean',\n      id: uuid()\n    },\n    { title: 'bad', singer: 'michael jackson', id: uuid() },\n    { title: 'aquarela', singer: 'toquinho', id: uuid() }\n  ]);\n\n  const addSong = (title, singer) => {\n    setSongs([...songs, { title, singer, id: uuid() }]);\n    // setSongs([...books, { title: title, singer: singer, id: uuid() }]);\n  };\n\n  const removeSong = id => {\n    setSongs(songs.filter(song => song.id !== id));\n  };\n\n  const removeAll = () => {\n    setTitle('');\n    setSinger('');\n  };\n\n  return (\n    <SongContext.Provider value={{ songs, addSong, removeSong }}>\n      {props.children}\n    </SongContext.Provider>\n  );\n};\n\nexport default SongContextProvider;\n"]},"metadata":{},"sourceType":"module"}